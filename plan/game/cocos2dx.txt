文档地址
http://docs.cocos.com/cocos2d-x/manual/zh/


先搭建好环境，下载开发库，然后进入官方网站把API DOC打开，尝试编写一个HelloWorld熟悉函数。之后去找一个简单的游戏源码看看游戏程序的结构，之后自己设计一个小游戏，坚持把他做完，途中遇到什么技术问题多用Google，一个技术点一个技术点的解决。最后等掌握了整个COCOS2D框架后，就找个美工，一起来创造世界了。


基本概念
精灵(Sprite) 对象，精灵是您在屏幕上移动的对象。你能控制它，它才是一个精灵，如果无法控制，那就只是一个节点(Node)
Sprite 很容易被创建，它有一些可以被配置的属性，比如：位置，旋转角度，缩放比例，透明度，颜色 等等。
一个能通过改变自身的属性：角度，位置，缩放，颜色等，变成可控制动画的 2D 图像。
父子节点继承角度，缩放比例等属性

导演（Director ）：导演控制电影制作流程，指导团队完成各项任务。Director是一个共享的单例对象，可以在代码中的任何地方调用。
渲染器负责渲染精灵和其它的对象进入屏幕。

场景图(Scene Graph)是一种安排场景内对象的数据结构，它把场景内所有的 节点(Node) 都包含在一个 树(tree) 上。  为了区别图层。
在 Cocos2d-x 中，通过 Scene 的 addChild() 方法构建场景图.
渲染时 z-order 值大的节点对象会后绘制，值小的节点对象先绘制。如果两个节点对象的绘制范围有重叠，z-order 值大的可能会覆盖 z-order 值小的。

锚点(anchor point) ，所有的节点(Node)对象都有锚点值，Sprite 是 Node 的子类，自然也具有锚点。锚点是节点对象在计算坐标位置时的一个基准点


动作(Action) 就是用来解决这个问题的，它可以让精灵在场景中移动，如从一个点移动到另外一个点。你还可以创建一个动作 序列(Sequence) ，让精灵按照这个序列做连续的动作，在动作过程中你可以改变精灵的位置，旋转角度，缩放比例等等。

通过引擎中的 Spawn 对象，你能让多个动作同时被解析执行。可能不同动作的执行时间不一致，在这种情况下，他们不会同时结束。

log()输出日志

创建精灵： 使用图片或者图片的一部分

可以使用专门的工具整合图片成一个图集节约空间占用

默认情况下，所有的节点对象锚点是 (0.5, 0.5)。（应该是相对大小？） 修改锚点位置也会移动精灵

多边形精灵可以提升性能。用AutoPolygon工具类可以将矩形图片转化成多边形

动作(Action) by to
每一个动作都会有两个方法 By 和 To。两种方法方便你在不同的情况使用，By 算的是相对于节点对象的当前位置，To 算的是绝对位置
可以控制精灵移动，旋转，变色，缩放，帧变换，变速运动等等。

动作序列(Sequence) 是一种封装多个动作的对象，当这个对象执行时被封装的动作会顺序执行。
一个 Sequence 可以包含任何数量的动作对象，回调方法和其它序列。

Spawn 同时执行所有的动作。Spawn 对象可以添加任意数量的动作和其它 Spawn 对象。

clone() 方法 克隆一个动作对象，因为动作里面会保存内部状态。比如右移100，在动作里会记录目标的位置，这样新的精灵的目标就会弄错

reverse() 将一系列动作倒序执行

素材可以去爱给网弄
http://www.aigei.com/game/


场景
切换场景/场景入栈/场景出栈  切换场景可以加一些动态效果